import { Telegraf } from 'telegraf';

const bot = new Telegraf(process.env.BOT_TOKEN);

const privateReplies = [
  'ü§ñ –Ø ‚Äî –≥—Ä—É–ø–ø–æ–≤–æ–π —Ç–∏–ø. –í –ª–∏—á–∫–µ —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –Ω–µ–ª–æ–≤–∫–æ... –∫–∞–∫ –Ω–∞ —Å–µ–º–µ–π–Ω—ã—Ö —É–∂–∏–Ω–∞—Ö üò¨',
  'üß¢ –ë—Ä–∞—Ç, —ç—Ç–æ—Ç –±–æ—Ç –≤ –ª–∏—á–∫–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –ó–æ–≤–∏ –≤ —á–∞—Ç ‚Äî —Ç–∞–º –∏ —Ä–∞–∑—Ä—É–ª–∏–º üí™',
  'üîí –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω. –≠—Ç–æ—Ç –±–æ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–æ–ª–æ ‚Äî —Ç–æ–ª—å–∫–æ —Ñ–∏—Ç—ã –≤ –≥—Ä—É–ø–ø–∞—Ö üé§',
  'üëÄ –ß—Ç–æ —Ç—ã —Ç—É—Ç –∑–∞–±—ã–ª? –ë–æ—Ç —Ç—É—Å—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö. –í –õ–° ‚Äî —Ä–µ–∂–∏–º –¶–µ–ª–∏—â–µ–≤–∞ "–Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω–∏–º–∞—é".',
  'üö´ –°–æ–≥–ª–∞—Å–Ω–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É —Ä–µ–≥–ª–∞–º–µ–Ω—Ç—É, –±–æ—Ç –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ. üë®‚Äçüíº',
  'üß© –¢—ã –Ω–∞—à—ë–ª —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ –ª–æ–≥–æ–≤–æ –±–æ—Ç–∞... –ù–æ –æ–Ω–æ –ø—É—Å—Ç–æ–µ. –ü—Ä–∏—Ö–æ–¥–∏ –≤ –≥—Ä—É–ø–ø—É ‚Äî —Ç–∞–º –≤—Å—è –º–∞–≥–∏—è ‚ú®'
];

const PHONE_EMOJIS = ['üìû', 'üì±', '‚òéÔ∏è', 'üì≤', 'üì≥'];

const replyParams = {
  reply_markup: {
    inline_keyboard: [
      [{ text: 'üìû –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Å–æ–∑–≤–æ–Ω—É', url: 'https://telemost.yandex.ru/j/65919061289353' }]
    ]
  }
};

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —á–∞—Ç
const isPrivate = (ctx) => ctx.chat?.type === 'private';

// –û—Ç–≤–µ—Ç —Å –º–µ–º–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –≤ –õ–°
const replyInPrivate = (ctx) => {
  const randomReply = privateReplies[Math.floor(Math.random() * privateReplies.length)];
  return ctx.reply(randomReply);
};

// Middleware, –∫–æ—Ç–æ—Ä—ã–π –±–ª–æ–∫–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É –≤ –ª–∏—á–∫–µ
const privateOnlyBlocker = (handler) => (ctx) => {
  if (isPrivate(ctx)) {
    return replyInPrivate(ctx);
  }
  return handler(ctx);
};

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
bot.start(privateOnlyBlocker(ctx => {
  ctx.reply('–ü—Ä–∏–≤–µ—Ç! –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /call –∏–ª–∏ Phone Emoji —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∫–Ω–æ–ø–∫—É –¥–ª—è —Å–æ–∑–≤–æ–Ω–∞.');
}));

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /call
bot.command('call', privateOnlyBlocker(ctx => {
  ctx.reply('–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Å–æ–∑–≤–æ–Ω—É:', replyParams);
}));

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –∏ —Å—Ç–∏–∫–µ—Ä–æ–≤
bot.on(['text', 'sticker'], privateOnlyBlocker(ctx => {
  const message = ctx.message;

  if (message.text && PHONE_EMOJIS.some(e => message.text.includes(e))) {
    return ctx.reply('–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Å–æ–∑–≤–æ–Ω—É:', replyParams);
  }

  if (message.sticker && PHONE_EMOJIS.includes(message.sticker.emoji)) {
    return ctx.reply('–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Å–æ–∑–≤–æ–Ω—É:', replyParams);
  }
}));

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è Serverless/Next.js API route
export default async function handler(req, res) {
  try {
    await bot.handleUpdate(req.body);
    res.status(200).send('OK');
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –≤ handler:', err);
    res.status(500).send('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞');
  }
}
